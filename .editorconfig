# You can learn more about editorconfig here: https://editorconfig.org and https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

###############################
# Core EditorConfig Options   #
###############################
# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# All files
[*]
charset = utf-8
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true
# Spell checking settings
spelling_languages = en-US,en-GB
spelling_checkable_types = strings,identifiers,comments
spelling_error_severity = error
#spelling_exclusion_path = .\exclusion.dic

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2
csharp_indent_labels = one_less_than_current
csharp_using_directive_placement = outside_namespace:warning
csharp_prefer_simple_using_statement = false:silent
csharp_prefer_braces = true:error
csharp_style_namespace_declarations = block_scoped:none
csharp_style_prefer_method_group_conversion = true:warning
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_throw_expression = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:warning
csharp_prefer_simple_default_expression = true:warning
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:silent
csharp_style_prefer_range_operator = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_implicitly_typed_lambda_expression = true:suggestion

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
tab_width = 4
end_of_line = crlf

dotnet_style_operator_placement_when_wrapping = beginning_of_line

# Configuration Options for Code Analysis - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/configuration-options
# Code Style Rules - https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/

# -> Lists all code style rules by ID and options, if any.

# IDE0001: Simplify name
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0001
dotnet_diagnostic.IDE0001.severity = warning

# IDE0002: Simplify member access
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0002
dotnet_diagnostic.IDE0002.severity = warning

# IDE0003: Remove 'this' or 'Me' qualification
# IDE0009: Add 'this' or 'Me' qualification
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009
dotnet_diagnostic.IDE0003.severity = silent
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false

# IDE0004: Remove unnecessary cast
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0004
dotnet_diagnostic.IDE0004.severity = warning

# IDE0005: Remove unnecessary import
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0005
dotnet_diagnostic.IDE0005.severity = error

# IDE0007: 'var' preferences
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008
dotnet_diagnostic.IDE0007.severity = suggestion
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true

# IDE0010: Add missing cases to switch statement
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0010
dotnet_diagnostic.IDE0010.severity = error

# IDE0011: Add braces
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0011
dotnet_diagnostic.IDE0011.severity = error
csharp_prefer_braces = true:error

# IDE0016: Use throw expression
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0016
dotnet_diagnostic.IDE0016.severity = suggestion
csharp_style_throw_expression = true:suggestion

# IDE0017: Use object initializers
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0017
dotnet_diagnostic.IDE0017.severity = warning
dotnet_style_object_initializer = true:warning

# IDE0018: Inline variable declaration
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0018
dotnet_diagnostic.IDE0018.severity = suggestion
csharp_style_inlined_variable_declaration = true

# IDE0019: Use pattern matching to avoid 'as' followed by a 'null' check
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0019
dotnet_diagnostic.IDE0019.severity = suggestion
csharp_style_pattern_matching_over_as_with_null_check = true

# IDE0020: Use pattern matching to avoid 'is' check followed by a cast (with variable)
# IDE0038: Use pattern matching to avoid 'is' check followed by a cast (without variable)
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0020-ide0038
dotnet_diagnostic.IDE0020.severity = suggestion
dotnet_diagnostic.IDE0038.severity = suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true

# IDE0021: Use expression body for constructors
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0021
dotnet_diagnostic.IDE0021.severity = silent
csharp_style_expression_bodied_constructors = false:silent

# IDE0022: Use expression body for methods
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0022
dotnet_diagnostic.IDE0022.severity = silent
csharp_style_expression_bodied_methods = false:silent

# IDE0023: Use expression body for conversion operators
# IDE0024: Use expression body for operators
# # https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0023-ide0024
dotnet_diagnostic.IDE0023.severity = silent
dotnet_diagnostic.IDE0024.severity = silent
csharp_style_expression_bodied_operators = false:silent

# IDE0025: Use expression body for properties
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0025
dotnet_diagnostic.IDE0025.severity = silent
csharp_style_expression_bodied_properties = true:silent

# IDE0026: Use expression body for indexers
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0026
dotnet_diagnostic.IDE0026.severity = silent
csharp_style_expression_bodied_indexers = true:silent

# IDE0027: Use expression body for accessors
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0027
dotnet_diagnostic.IDE0027.severity = silent
csharp_style_expression_bodied_accessors = true:silent

# IDE0028: Use collection initializers
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0028
dotnet_diagnostic.IDE0028.severity = suggestion
dotnet_style_collection_initializer = true:suggestion

# IDE0029: Null check can be simplified (ternary conditional check)
# IDE0030: Null check can be simplified (nullable ternary conditional check)
# IDE0270: Null check can be simplified (if null check)
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0029-ide0030-ide0270
dotnet_diagnostic.IDE0029.severity = suggestion
dotnet_diagnostic.IDE0030.severity = suggestion
dotnet_diagnostic.IDE00270.severity = suggestion
dotnet_style_coalesce_expression = true:suggestion

# IDE0031: Use null propagation
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0031
dotnet_diagnostic.IDE0031.severity = warning
dotnet_style_null_propagation = true:warning

# IDE0032: Use auto property
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0032
dotnet_diagnostic.IDE0032.severity = warning
dotnet_style_prefer_auto_properties = true:warning

# IDE0033: Use explicitly provided tuple name
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0033
dotnet_diagnostic.IDE0033.severity = warning
dotnet_style_explicit_tuple_names = true:warning

# IDE0034: Simplify 'default' expression
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0034
dotnet_diagnostic.IDE0034.severity = warning
csharp_prefer_simple_default_expression = true:warning

# IDE0035: Removed unreachable code
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0035
dotnet_diagnostic.IDE0035.severity = error

# IDE0036: Order modifers
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0036
dotnet_diagnostic.IDE0036.severity = silent
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent

# IDE0037: Use inferred member name
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0037
dotnet_diagnostic.IDE0037.severity = suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion

# IDE0039: Use local function instead of lambda
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0039
dotnet_diagnostic.IDE0039.severity = suggestion
csharp_style_pattern_local_over_anonymous_function = true

# IDE0040: Add accessibility modifers
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0040
dotnet_diagnostic.IDE0040.severity = error
dotnet_style_require_accessibility_modifiers = always:error

# IDE0041: Use is null check
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0041
dotnet_diagnostic.IDE0041.severity = warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# IDE0042: Deconstruct variable declaration
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0042
dotnet_diagnostic.IDE0042.severity = suggestion
csharp_style_deconstructed_variable_declaration = true

# IDE0044: Add readonly modifier
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0044
dotnet_diagnostic.IDE0044.severity = suggestion
dotnet_style_readonly_field = true

# IDE0045: Use conditional expression for assignment
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0045
dotnet_diagnostic.IDE0045.severity = silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent

# IDE0046: Use conditional expression for assignment
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0046
dotnet_diagnostic.IDE0046.severity = silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

# IDE0047: Remove unnecessary parentheses
# IDE0048: Add parentheses for clarity
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048
dotnet_diagnostic.IDE0047.severity = warning
dotnet_diagnostic.IDE0048.severity = warning
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary

# IDE0049: Use language keywords instead of framework type names for type references
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0049
dotnet_diagnostic.IDE0049.severity = silent
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# IDE0050: Convert anonymous type to tuple
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0050
dotnet_diagnostic.IDE0050.severity = silent

# IDE0051: Remove unused private member
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0051
dotnet_diagnostic.IDE0051.severity = error

# IDE0052: Remove unread private member
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0052
dotnet_diagnostic.IDE0052.severity = error

# IDE0053: Use expression body for lambdas
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0053
dotnet_diagnostic.IDE0053.severity = silent
csharp_style_expression_bodied_lambdas = true:silent

# IDE0054: Use compound assignment
# IDE0074: Use coalesce compound assignment
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0054-ide0074
dotnet_diagnostic.IDE0054.severity = suggestion
dotnet_diagnostic.IDE0074.severity = suggestion
dotnet_style_prefer_compound_assignment = true:suggestion

# IDE0055: Fix formatting
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/formatting-rules
dotnet_diagnostic.IDE0055.severity = error

# .Net formatting rules
# Organise usings
dotnet_sort_system_directives_first = false
dotnet_separate_import_directive_groups = false

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

# IDE0056: Use index operator
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0056
dotnet_diagnostic.IDE0056.severity = silent
csharp_style_prefer_index_operator = true:silent

# IDE0057: Use range operator
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0057
dotnet_diagnostic.IDE0057.severity = suggestion
csharp_style_prefer_range_operator = true:suggestion

# IDE0058: Remove unnecessary expression value
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0058
dotnet_diagnostic.IDE0058.severity = silent
csharp_style_unused_value_expression_statement_preference = discard_variable

# IDE0059: Remove unnecessary value assignment
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0059
dotnet_diagnostic.IDE0059.severity = warning
csharp_style_unused_value_assignment_preference = discard_variable

# IDE0060: Remove unused parameter
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0060
dotnet_diagnostic.IDE0060.severity = error
dotnet_code_quality_unused_parameters = all:error

# IDE0061: Use expression body for local functions
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0061
dotnet_diagnostic.IDE0061.severity = silent
csharp_style_expression_bodied_local_functions = false:silent

# IDE0062: Make local function static
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0062
dotnet_diagnostic.IDE0062.severity = suggestion
csharp_prefer_static_local_function = true:suggestion

# IDE0063: Use simple 'using' statement
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0063
dotnet_diagnostic.IDE0063.severity = silent
csharp_prefer_simple_using_statement = false:silent

# IDE0064: Make struct fields writable
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0064
dotnet_diagnostic.IDE0064.severity = suggestion

# IDE0065: 'using' directive placement
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0065
dotnet_diagnostic.IDE0065.severity = warning
csharp_using_directive_placement = outside_namespace:warning

# IDE0066: Use switch expression
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0066
dotnet_diagnostic.IDE0066.severity = suggestion
csharp_style_prefer_switch_expression = true:suggestion

# IDE0070: Use 'System.HasCode.Combine'
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0070
dotnet_diagnostic.IDE0070.severity = error

# IDE0071: Simplify interpolation
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0071
dotnet_diagnostic.IDE0071.severity = warning
dotnet_style_prefer_simplified_interpolation = true:warning

# IDE0072: Add missing cases to switch expression
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0072
dotnet_diagnostic.IDE0072.severity = error

# IDE0073: Require file header
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0073
dotnet_diagnostic.IDE0073.severity = default
file_header_template = unset

# IDE0075: Simplify conditional expression
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0075
dotnet_diagnostic.IDE0075.severity = error
dotnet_style_prefer_simplified_boolean_expressions = true:error

# IDE0076: Remove invalid global 'SuppressMessageAttribute'
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0076
dotnet_diagnostic.IDE0076.severity = error

# IDE0077: Avoid legacy format target in global 'SuppressMessageAttribute'
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0077
dotnet_diagnostic.IDE0077.severity = error

# IDE0078: Use pattern matching
# IDE0260: Use pattern matching
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0078-ide0260
dotnet_diagnostic.IDE0078.severity = suggestion
dotnet_diagnostic.IDE0260.severity = suggestion
csharp_style_prefer_pattern_matching = true:suggestion

# IDE0079: Remove unnecessary suppression
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0079
dotnet_diagnostic.IDE0079.severity = error
dotnet_remove_unnecessary_suppression_exclusions = none

# IDE0080: Remove unnecessary suppression operator
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0080
dotnet_diagnostic.IDE0080.severity = error

# IDE0081: Remove `ByVal` - Visual Basic only

# IDE0082: Convert typeof to nameof
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0082
dotnet_diagnostic.IDE0082.severity = warning

# IDE0083: Use pattern matching (not operator)
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0083
dotnet_diagnostic.IDE00XX.severity = suggestion
csharp_style_prefer_not_pattern = true:suggestion

# IDE0084: Use pattern matching (`IsNot` operator) - Visual Basic only

# IDE0090: Simplify new expression
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0090
dotnet_diagnostic.IDE0090.severity = suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion

# IDE0100: Remove unnecessary equality operator
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0100
dotnet_diagnostic.IDE0100.severity = error

# IDE0110: Remove unnecessary discard
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0110
dotnet_diagnostic.IDE0100.severity = warning

# IDE0120: Simplify LINQ expression
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0120
dotnet_diagnostic.IDE0120.severity = none

# IDE0130: Namespace does not match folder structure
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0130
dotnet_diagnostic.IDE0130.severity = error
dotnet_style_namespace_match_folder = true:error

# IDE0140: Simplify object creation - Visual Basic only
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0140
dotnet_diagnostic.IDE0140.severity = none
visual_basic_style_prefer_simplified_object_creation = true

# IDE0150: Prefer 'null' check over type check
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0150
dotnet_diagnostic.IDE0150.severity = warning
csharp_style_prefer_null_check_over_type_check = true:warning

# IDE0160: Namespace declaration preferences (block scoped)
# IDE0161: Namespace declaration preferences (file scoped)
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0160-ide0161
dotnet_diagnostic.IDE0160.severity = none
dotnet_diagnostic.IDE0161.severity = none
csharp_style_namespace_declarations = block_scoped:none

# IDE0170: Simplify property pattern
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/IDE0170
dotnet_diagnostic.IDE0170.severity = suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion

# IDE0180: Use tuple to swap values
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0180
dotnet_diagnostic.IDE0180.severity = suggestion
csharp_style_prefer_tuple_swap = true:suggestion

# IDE0200: Remove unnecessary lambda expression
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0200
dotnet_diagnostic.IDE0200.severity = warning
csharp_style_prefer_method_group_conversion = true:warning

# IDE0210: Convert to top-level statements
# IDE0211: Convert to 'Program.Main' style program
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0210
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0211
dotnet_diagnostic.IDE0210.severity = silent
dotnet_diagnostic.IDE0211.severity = silent
csharp_style_prefer_top_level_statements = true:silent

# IDE0220: Add explicit cast in foreach loop
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0220
dotnet_diagnostic.IDE0220.severity = suggestion
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed

# IDE0230: Use UTF-8 string literal
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0230
dotnet_diagnostic.IDE0230.severity = suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion

# IDE0240: Nullable directive is redundant
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0240
dotnet_diagnostic.IDE0240.severity = suggestion

# IDE0241: Nullable directive is unnecessary
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0241
dotnet_diagnostic.IDE0241.severity = suggestion

# IDE0250: Struct can be made 'readonly'
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0250
dotnet_diagnostic.IDE0250.severity = warning
csharp_style_prefer_readonly_struct = true:suggestion

# IDE0251: Member can be made 'readonly'
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0251
dotnet_diagnostic.IDE0251.severity = warning
csharp_style_prefer_readonly_struct_member = true:suggestion

# IDE0280: Use 'nameof'
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0280
dotnet_diagnostic.IDE0280.severity = warning

# IDE0290 Use primary constructor
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0290
csharp_style_prefer_primary_constructors = true:suggestion

# IDE0300 Use collection expression for array
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0300
dotnet_style_prefer_collection_expression = true

# IDE0301 Use collection expression for empty
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/IDE0301
dotnet_style_prefer_collection_expression = true

# IDE0302 Use collection expression for stackalloc
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/IDE0302
dotnet_style_prefer_collection_expression = true

# IDE0303 Use collection expression for Create()
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/IDE0303
dotnet_style_prefer_collection_expression = true

# IDE0304 Use collection expression for builder
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/IDE0304
dotnet_style_prefer_collection_expression = true

# IDE0305 Use collection expression for fluent
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/IDE0305
dotnet_style_prefer_collection_expression = when_types_exactly_match:suggestion

# IDE1005:  Use conditional delegate call
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide1005
dotnet_diagnostic.IDE1005.severity = suggestion
csharp_style_conditional_delegate_call = true:suggestion

# IDE1006: Naming styles
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide1006
#dotnet_diagnostic.IDE1006.severity = warning

###############################
# Naming Conventions          #
###############################
# https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/naming-rules

dotnet_naming_rule.public_members_must_be_capitalized.severity = error
dotnet_naming_rule.public_members_must_be_capitalized.symbols = public_symbols
dotnet_naming_rule.public_members_must_be_capitalized.style = pascal_case

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = error
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = error
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.severity = silent
dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.symbols = private_or_internal_static_field
dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_field_should_be_field.severity = silent
dotnet_naming_rule.private_or_internal_field_should_be_field.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be_field.style = field

# Symbol specifications

dotnet_naming_symbols.public_symbols.applicable_kinds = property, method, field, event, delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum, delegate
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_static_field.required_modifiers = static

dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities = *
dotnet_naming_symbols.constant_fields.required_modifiers = const

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers = 

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.field.required_prefix = 
dotnet_naming_style.field.required_suffix = 
dotnet_naming_style.field.word_separator = 
dotnet_naming_style.field.capitalization = camel_case

###############################
# Code quality rules          #
###############################
# Code quality rules - https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/

# -> Lists all code quality rules by ID and options, if any.

#############################
# Design rules              #
#############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/design-warnings

# CA1000: Do not declare static members on generic types
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1000
dotnet_diagnostic.CA1000.severity = warning

# CA1001: Types that own disposable fields should be disposable
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/CA1001
dotnet_diagnostic.CA1001.severity = warning

# CA1002: Do not expose generic lists
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/CA1002
dotnet_diagnostic.CA1002.severity = suggestion

# CA1003: Use generic event handler instances
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/CA1003
dotnet_diagnostic.CA1003.severity = warning

# CA1005: Avoid excessive parameters on generic types
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/CA1005
dotnet_diagnostic.CA1005.severity = warning

# CA1008: Enums should have zero value
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/CA1008
dotnet_diagnostic.CA1008.severity = warning
#Uncomment the below line and specify any other allowed names for none
#dotnet_code_quality.CA1008.additional_enum_none_names = Never|Nothing

# CA1010: Generic interface should also be implemented
dotnet_diagnostic.CA1010.severity = silent

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = none

# CA1014: Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = none

# CA1016: Mark assemblies with assembly version
dotnet_diagnostic.CA1016.severity = suggestion

# CA1017: Mark assemblies with ComVisible
dotnet_diagnostic.CA1017.severity = none

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = suggestion

# CA1019: Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = none

# CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = none

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = none

# CA1027: Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = warning

# CA1028: Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = suggestion

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = none

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = none

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = none

# CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity = silent

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = none

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = suggestion

# CA1043: Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1043.severity = none

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = none

# CA1045: Do not pass types by reference
dotnet_diagnostic.CA1045.severity = none

# CA1046: Do not overload equality operator on reference types
dotnet_diagnostic.CA1046.severity = none

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = suggestion

# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = suggestion

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = silent

# CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = none

# CA1054: URI-like parameters should not be strings
dotnet_diagnostic.CA1054.severity = none

# CA1055: URI-like return values should not be strings
dotnet_diagnostic.CA1055.severity = none

# CA1056: URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = none

# CA1058: Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = none

# CA1060: Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = none

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = suggestion

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = warning

# CA1064: Exceptions should be public
dotnet_diagnostic.CA1064.severity = warning

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = warning

# CA1066: Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.CA1066.severity = warning

# CA1067: Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = warning

# CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = warning

# CA1069: Enums values should not be duplicated
dotnet_diagnostic.CA1069.severity = warning

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = suggestion

#############################
# Documentation rules       #
#############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/documentation-warnings

# CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = none

#############################
# Globalization rules       #
#############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/globalization-warnings

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = none

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = silent

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = silent

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = none

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = none

# CA1309: Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = silent

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = silent

# CA1311: Specify a culture or use an invariant version
dotnet_diagnostic.CA1311.severity = silent

# CA2101: Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = suggestion

#############################################
# Portability and interoperability rules    #
#############################################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/interoperability-warnings

# CA1401: P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = suggestion

# CA1416: Validate platform compatibility
dotnet_diagnostic.CA1416.severity = warning

# CA1417: Do not use 'OutAttribute' on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = warning

# CA1418: Use valid platform string
dotnet_diagnostic.CA1418.severity = warning

# CA1419: Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.CA1419.severity = suggestion

# CA1420: Property, type, or attribute requires runtime marshalling
dotnet_diagnostic.CA1420.severity = warning

# CA1421: This method uses runtime marshalling even when the 'DisableRuntimeMarshallingAttribute' is applied
dotnet_diagnostic.CA1421.severity = suggestion

# CA1422: Validate platform compatibility
dotnet_diagnostic.CA1422.severity = warning

#############################
# Maintainability rules     #
#############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/maintainability-warnings

# CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = none

# CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = none

# CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = none

# CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = none

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = error

# CA1508: Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = suggestion

# CA1509: Invalid entry in code metrics rule specification file
dotnet_diagnostic.CA1509.severity = none

# CA1510: Use ArgumentNullException throw helper
dotnet_diagnostic.CA1510.severity = warning

# CA1511: Use ArgumentException throw helper
dotnet_diagnostic.CA1511.severity = warning

# CA1512: Use ArgumentOutOfRangeException throw helper
dotnet_diagnostic.CA1512.severity = warning

# CA1513: Use ObjectDisposedException throw helper
dotnet_diagnostic.CA1513.severity = warning

# CA1514: Avoid redundant length argument
dotnet_diagnostic.CA1514.severity = warning

# CA1515: Consider making public types internal
dotnet_diagnostic.CA1515.severity = none

#############################
# Naming rules              #
#############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/naming-warnings

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = none

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = silent

# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = silent

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = silent

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = silent

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = silent

# CA1713: Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1713.severity = none

# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = silent

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = silent

# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = silent

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = none

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = none

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = silent

# CA1727: Use PascalCase for named placeholders
dotnet_diagnostic.CA1727.severity = silent

#############################
# Performance rules         #
#############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/performance-warnings

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = warning

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = warning

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = warning

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = warning

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = warning

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = warning

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = warning

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = warning

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = warning

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = warning

# CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = warning

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = warning

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = warning

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = warning

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = warning

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = warning

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = warning

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = warning

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = warning

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = warning

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = warning

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = warning

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = warning

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = warning

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = warning

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = warning

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = warning

# CA1839: Use 'Environment.ProcessPath'
dotnet_diagnostic.CA1839.severity = warning

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = warning

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = warning

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = warning

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = warning

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = warning

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = warning

# CA1846: Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1846.severity = warning

# CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = warning

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = warning

# CA1849: Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = warning

# CA1850: Prefer static 'HashData' method over 'ComputeHash'
dotnet_diagnostic.CA1850.severity = warning

# CA1851: Possible multiple enumerations of 'IEnumerable' collection
dotnet_diagnostic.CA1851.severity = warning

# CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = warning

# CA1853: Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1853.severity = warning

# CA1854: Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.CA1854.severity = warning

# CA1855: Prefer 'Clear' over 'Fill'
dotnet_diagnostic.CA1855.severity = warning

# CA1856: Incorrect usage of ConstantExpected attribute
dotnet_diagnostic.CA1856.severity = warning

# CA1858: Use 'StartsWith' instead of 'IndexOf'
dotnet_diagnostic.CA1858.severity = warning

# CA1859: Use concrete types when possible for improved performance
dotnet_diagnostic.CA1859.severity = warning

# CA1860: Avoid using 'Enumerable.Any()' extension method
dotnet_diagnostic.CA1860.severity = warning

# CA1861: Avoid constant arrays as arguments
dotnet_diagnostic.CA1861.severity = warning

# CA1862: Use the 'StringComparison' method overloads to perform case-insensitive string comparisons
dotnet_diagnostic.CA1862.severity = warning

# CA1864: Prefer the 'IDictionary.TryAdd(TKey, TValue)' method
dotnet_diagnostic.CA1864.severity = warning

# CA1865: Use char overload
dotnet_diagnostic.CA1865.severity = warning

# CA1866: Use char overload
dotnet_diagnostic.CA1866.severity = warning

# CA1865-CA1867: Use 'string.Method(char)' instead of 'string.Method(string)' for string with single char
dotnet_diagnostic.CA1867.severity = none

# CA1868: Unnecessary call to 'Contains(item)'
dotnet_diagnostic.CA1868.severity = warning

# CA1869: Cache and reuse 'JsonSerializerOptions' instances
dotnet_diagnostic.CA1869.severity = warning

# CA1870: Use a cached 'SearchValues' instance
dotnet_diagnostic.CA1870.severity = warning

#############################
# Single file rules         #
#############################
# https://learn.microsoft.com/en-us/dotnet/core/deploying/single-file/warnings/overview

#############################
# Reliability rules         #
#############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/reliability-warnings

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = none

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = none

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = none

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = warning

# CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = suggestion

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = suggestion

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = warning

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = warning

# CA2017: Parameter count mismatch
dotnet_diagnostic.CA2017.severity = warning

# CA2018: 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
dotnet_diagnostic.CA2018.severity = warning

# CA2019: Improper 'ThreadStatic' field initialization
dotnet_diagnostic.CA2019.severity = suggestion

# CA2020: Prevent from behavioral change
dotnet_diagnostic.CA2020.severity = suggestion

# CA2021: Do not call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types
dotnet_diagnostic.CA2021.severity = warning

#############################
# Security rules            #
#############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/security-warnings

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = warning

# CA2109: Review visible event handlers
dotnet_diagnostic.CA2109.severity = warning

# CA2119: Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = warning

# CA2153: Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = warning

# CA2300: Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = warning

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = warning

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = warning

# CA2305: Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = warning

# CA2310: Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = warning

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = warning

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = warning

# CA2315: Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = warning

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = warning

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = warning

# CA2326: Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = warning

# CA2327: Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = warning

# CA2328: Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = warning

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = warning

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = warning

# CA2350: Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.CA2350.severity = warning

# CA2351: Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.CA2351.severity = warning

# CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = warning

# CA2353: Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = warning

# CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2354.severity = warning

# CA2355: Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.CA2355.severity = warning

# CA2356: Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.CA2356.severity = warning

# CA2361: Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = warning

# CA2362: Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = warning

# CA3001: Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = warning

# CA3002: Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = warning

# CA3003: Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = warning

# CA3004: Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = warning

# CA3005: Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = warning

# CA3006: Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = warning

# CA3007: Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = warning

# CA3008: Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = warning

# CA3009: Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = warning

# CA3010: Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = warning

# CA3011: Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = warning

# CA3012: Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = warning

# CA3061: Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = warning

# CA3075: Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = warning

# CA3076: Insecure XSLT script processing
dotnet_diagnostic.CA3076.severity = warning

# CA3077: Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3077.severity = warning

# CA3147: Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = warning

# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = warning

# CA5351: Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning

# CA5358: Review cipher mode usage with cryptography experts
dotnet_diagnostic.CA5358.severity = warning

# CA5359: Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = warning

# CA5360: Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = warning

# CA5361: Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = warning

# CA5362: Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = warning

# CA5363: Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = warning

# CA5364: Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = warning

# CA5365: Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = warning

# CA5366: Use XmlReader for 'DataSet.ReadXml()'
dotnet_diagnostic.CA5366.severity = warning

# CA5367: Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = warning

# CA5368: Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = warning

# CA5369: Use XmlReader for 'XmlSerializer.Deserialize()'
dotnet_diagnostic.CA5369.severity = warning

# CA5370: Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.CA5370.severity = warning

# CA5371: Use XmlReader for 'XmlSchema.Read()'
dotnet_diagnostic.CA5371.severity = warning

# CA5372: Use XmlReader for XPathDocument constructor
dotnet_diagnostic.CA5372.severity = warning

# CA5373: Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = warning

# CA5374: Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = warning

# CA5375: Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5375.severity = warning

# CA5376: Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = warning

# CA5377: Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = warning

# CA5378: Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = warning

# CA5379: Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.CA5379.severity = warning

# CA5380: Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = warning

# CA5381: Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = warning

# CA5382: Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5382.severity = warning

# CA5383: Ensure Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5383.severity = warning

# CA5384: Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = warning

# CA5385: Use Rivest-Shamir-Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = warning

# CA5386: Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = warning

# CA5387: Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5387.severity = warning

# CA5388: Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5388.severity = warning

# CA5389: Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.CA5389.severity = warning

# CA5390: Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = warning

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = warning

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = warning

# CA5393: Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = warning

# CA5394: Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = warning

# CA5395: Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = warning

# CA5396: Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = warning

# CA5397: Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = warning

# CA5398: Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = warning

# CA5399: HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5399.severity = warning

# CA5400: Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = warning

# CA5401: Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = warning

# CA5402: Use CreateEncryptor with the default IV 
dotnet_diagnostic.CA5402.severity = warning

# CA5403: Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = warning

# CA5404: Do not disable token validation checks
dotnet_diagnostic.CA5404.severity = warning

# CA5405: Do not always skip token validation in delegates
dotnet_diagnostic.CA5405.severity = warning

#############################
# Usage rules               #
#############################
# https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/usage-warnings

# CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = suggestion

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = warning

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = silent

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = none

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = suggestion

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = suggestion

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = none

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = none

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = silent

# CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = none

# CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = none

# CA2218: Override GetHashCode on overriding Equals
dotnet_diagnostic.CA2218.severity = suggestion

# CA2219: Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = suggestion

# CA2224: Override Equals on overloading operator equals
dotnet_diagnostic.CA2224.severity = suggestion

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = none

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = none

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = silent

# CA2231: Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = suggestion

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = none

# CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = none

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = none

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = suggestion

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = suggestion

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = none

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = suggestion

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = suggestion

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = suggestion

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = warning

# CA2248: Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = suggestion

# CA2249: Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = suggestion

# CA2250: Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.CA2250.severity = suggestion

# CA2251: Use 'string.Equals'
dotnet_diagnostic.CA2251.severity = silent

# CA2252: This API requires opting into preview features
dotnet_diagnostic.CA2252.severity = error

# CA2253: Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = suggestion

# CA2254: Template should be a static expression
dotnet_diagnostic.CA2254.severity = suggestion

# CA2255: The 'ModuleInitializer' attribute should not be used in libraries
dotnet_diagnostic.CA2255.severity = warning

# CA2256: All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.CA2256.severity = warning

# CA2257: Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.CA2257.severity = warning

# CA2258: Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.CA2258.severity = warning

# CA2259: 'ThreadStatic' only affects static fields
dotnet_diagnostic.CA2259.severity = warning

# CA2260: Use correct type parameter
dotnet_diagnostic.CA2260.severity = warning

# CA2261: Do not use ConfigureAwaitOptions.SuppressThrowing with Task<TResult>
dotnet_diagnostic.CA2261.severity = warning

# CA2262: Set 'MaxResponseHeadersLength' properly
dotnet_diagnostic.CA2262.severity = suggestion

# CA2263: Prefer generic overload when type is known
dotnet_diagnostic.CA2263.severity = warning

#############################
# IDE only rules            #
#############################

# JSON001: Invalid JSON pattern
# https://learn.microsoft.com/en-us/visualstudio/ide/reference/json001
dotnet_diagnostic.JSON001.severity = none

# JSON002: Invalid JSON pattern
# https://learn.microsoft.com/en-us/visualstudio/ide/reference/json002
dotnet_diagnostic.JSON002.severity = none

# html files
[*.html]
indent_style = space
indent_size = 2

# json files
[*.json]
indent_style = space
indent_size = 2

# Markdown files
[*.md]
max_line_length = off
trim_trailing_whitespace = false

# scss style sheet files
[*.scss]
indent_style = space
indent_size = 2

# type script files
[*.ts]
indent_style = space
indent_size = 2
quote_type = single
